/* You can add global styles to this file, and also import other style files */

html, body { height: 100%; }
body { margin: 0; font-family: Roboto, "Helvetica Neue", sans-serif; }

body {
    background-image: url('/assets/brushed.png');
}

// @import '@angular/material/prebuilt-themes/deeppurple-amber.css';

// // Imports for Angular Material Theming
// // @import '~@angular/material/theming';
// // @include mat-core();

// // // Light theme
// // $light-primary: mat-palette($mat-indigo);
// // $light-accent:  mat-palette($mat-pink, A200, A100, A400);
// // $light-theme:   mat-light-theme($light-primary, $light-accent);

// // // Dark theme
// // $dark-primary: mat-palette($mat-blue-grey);
// // $dark-accent:  mat-palette($mat-amber, A200, A100, A400);
// // $dark-warn:    mat-palette($mat-deep-orange);
// // $dark-theme:   mat-dark-theme($dark-primary, $dark-accent, $dark-warn);


// // @media (prefers-color-scheme: light) {
// //     @include angular-material-theme($light-theme);
// //   }
  
// //   @media (prefers-color-scheme: dark) {
// //     @include angular-material-theme($dark-theme);
// //   }

// //   .light-theme {
// //     @include angular-material-theme($light-theme);
// //     @include custom-components-theme($light-theme);
// //   }
  
// //   .dark-theme {
// //     @include angular-material-theme($dark-theme);
// //     @include custom-components-theme($dark-theme);
// //   }



// // Import library functions for theme creation.
// @import '~@angular/material/theming';

// @mixin candy-carousel-color($config-or-theme) {
//   // Extract the color configuration in case a theme has been passed.
//   // This allows consumers to either pass a theme object or a color configuration.
//   $config: mat-get-color-config($config-or-theme);
//   // Extract the palettes you need from the theme definition.
//   $primary: map-get($config, primary);
//   $accent: map-get($config, accent);
  
//   // Define any styles affected by the theme.
//   .candy-carousel {
//     // Use mat-color to extract individual colors from a palette.
//     background-color: mat-color($primary);
//     border-color: mat-color($accent, A400);
//   }
// }

// @mixin candy-carousel-typography($config-or-theme) {
//     // Extract the typography configuration in case a theme has been passed.
//     $config: mat-get-typography-config($config-or-theme);
  
//     .candy-carousel {
//       font: {
//         family: mat-font-family($config, body-1);
//         size: mat-font-size($config, body-1);
//         weight: mat-font-weight($config, body-1);
//       }
//     }
//   }

//   @mixin candy-carousel-theme($theme) {
//     // Extracts the color and typography configurations from the theme.
//     $color: mat-get-color-config($theme);
//     $typography: mat-get-typography-config($theme);
  
//     // Do not generate styles if configurations for individual theming
//     // systems have been explicitly set to `null`.
//     @if $color != null {
//       @include candy-carousel-color($color); 
//     }
//     @if $typography != null {
//       @include candy-carousel-typography($typography);
//     }
//   }


// // Import library functions for theme creation.
// @import '~@angular/material/theming';

// // Include non-theme styles for core.
// @include mat-core();

// // Define your application's custom theme.
// $primary: mat-palette($mat-indigo);
// $accent:  mat-palette($mat-pink, A200, A100, A400);
// $theme: mat-light-theme((
//   color: (
//     primary: $primary,
//     accent: $accent,
//   )
// ));

// // Include theme styles for Angular Material components.
// @include angular-material-theme($theme);

// // Include theme styles for your custom components.
// @include candy-carousel-theme($theme);

//   // Import theming functions
// @import '~@angular/material/theming';

// .candy-carousel {
//   // Get the default hue for a palette.
//   color: mat-color($primary);
  
//   // Get a specific hue for a palette. 
//   // See https://material.io/archive/guidelines/style/color.html#color-color-palette for hues.
//   background-color: mat-color($accent, 300);
  
//   // Get a relative color for a hue ('lighter' or 'darker')
//   outline-color: mat-color($accent, lighter);

//   // Get a contrast color for a hue by adding `-contrast` to any other key.
//   border-color: mat-color($primary, '100-contrast');
// }

// alternate-button {
//     // Extract the color configuration from the theme and generate
//     // the color theme styles for `mat-button`.
//     @include mat-button-color($theme);
//   }

@import "~@angular/material/theming";
@include mat-core();
$angular-primary: mat-palette($mat-teal, 500, 100, 900);
$angular-accent: mat-palette($mat-pink, A200, A100, A400);
$angular-warn: mat-palette($mat-red);
$angular-default-theme: mat-light-theme(
  (
    color: (
      primary: $angular-primary,
      accent: $angular-accent,
      warn: $angular-warn,
    ),
  )
);


@include angular-material-theme($angular-default-theme);

$angular-dark-theme: mat-dark-theme(
  (
    color: (
      primary: $angular-primary,
      accent: $angular-accent,
      warn: $angular-warn,
    ),
  )
);
.darkMode {
  @include angular-material-color($angular-dark-theme);
}